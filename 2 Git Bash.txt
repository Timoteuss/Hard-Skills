GIT Homework 1

Для выполнения задания у вас должен быть установлен для Windows - GitBash.
Создан аккаунт в GitHub

Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.


Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

JSON
 4. Создать внешний репозиторий c названием JSON.- Repositories - New - "JSON" - Create repository
 5. Клонировать репозиторий JSON на локальный компьютер. - git clone https://github.com/Timoteuss/JSON.git
 6. Внутри локального JSON создать файл “new.json”.- cd JSON/ - touch new.json
 7. Добавить файл под гит. - git add .
 8. Закоммитить файл. - git commit -m "add file new.json"
 9. Отправить файл на внешний GitHub репозиторий. - git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON. - vim new.json - i - "{Заголовки: "Пояснения"}" - Esc - :wq
 11. Отправить изменения на внешний репозиторий. - git status - git add . - git commit -m "add text to new.json" - git push
 12. Создать файл preferences.json - touch preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, страна которую хотели бы посетить) в формате JSON. - vim preferences.json - i - "{Заголовки: "Пояснения"}" - Esc - :wq
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON - touch slills.json - vim slills.json - i - "{Заголовки: "Пояснения"}" - Esc - :wq
 15. Отправить сразу 2 файла на внешний репозиторий. - git add . - git commit -m "Create 2 files - perfomans.json and skills.json" - git push
 16. На веб интерфейсе создать файл bug_report.json. - Add file - Create new file
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. - Commit new file
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON. - Edit this file
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе. - "Write the text to bug_report.json" - Commit changes
 20. Синхронизировать внешний и локальный репозиторий JSON - git fetch - git pull


XML
 21. Создать внешний репозиторий c названием XML. - Repositories - New - "XML" - Create repository
 22. Клонировать репозиторий XML на локальный компьютер. - cd .. - git clone https://github.com/Timoteuss/XML.git
 23. Внутри локального XML создать файл “new.xml”. - cd XML - touch new.xml
 24. Добавить файл под гит. - sit status - git add .
 25. Закоммитить файл. - git commit -m "Create file new.xml"
 26. Отправить файл на внешний GitHub репозиторий. - git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML. - vim new.xml - i - <xml> - Esc - :wq
 28. Отправить изменения на внешний репозиторий. - git status - git add . - git commit -m "Add xml cod to new.xml" - git push
 29. Создать файл preferences.xml - touch prefernces.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, страна которую хотели бы посетить) в формате XML. - vim preferences.xml - i - <xml> - Esc - :wq
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML - vim skills.xml - i - <xml> - Esc - :wq
 32. Сделать коммит в одну строку. - git add. - git commit -m "create 2 xml files - preferences.xml & skills.xml" (пытался сделать git commit -am, но 2 файла одной командой добавлять и коммитить одновременно Git Bash отказывается) 
 33. Отправить сразу 2 файла на внешний репозиторий. - git push
 34. На веб интерфейсе создать файл bug_report.xml. - Add file - Create new file
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.  - "Create bug_report.xml" - Commit new file
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML. - Edit this file
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе. - "Add xml to bug_report.xml"
 38. Синхронизировать внешний и локальный репозиторий XML - git fetch - git pull

TXT
 1. Создать внешний репозиторий c названием TXT. - Repositories - New - "TXT" - Create repository
 2. Клонировать репозиторий TXT на локальный компьютер. - cd .. - git clone https://github.com/Timoteuss/TXT.git
 3. Внутри локального TXT создать файл “new.txt”. - cd TXT - touch new.txt
 4. Добавить файл под гит. - git add .
 5. Закоммитить файл. - git commit -m "create file new.txt"
 6. Отправить файл на внешний GitHub репозиторий. git push
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT. - vim new.txt - i - text - Esc - :wq
 8. Отправить изменения на внешний репозиторий. - git commit -am "add text to new.txt"
 9. Создать файл preferences.txt - touch preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT. - vim preferences.txt - i - text - Esc - :wq
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT - touch skills.txt - vim skills.txt - i - text - Esc - :wq
 12. Сделать коммит в одну строку. - git add . - git commit -m "Create 2 files - preferences.txt & skills.txt"
 13. Отправить сразу 2 файла на внешний репозиторий.
 14. На веб интерфейсе создать файл bug_report.txt. - Add file - Create new file
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе. - "Create bug_report.txt" - Commit new file
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT. - Edit this file 
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. - "Add text to bug_report.txt" - Commit changes
 18. Синхронизировать внешний и локальный репозиторий TXT - git fetch - git pull